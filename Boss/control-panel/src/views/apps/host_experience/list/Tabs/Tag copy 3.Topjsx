import React, { useState } from 'react';
import { Box, Typography, TextField, Chip } from '@mui/material';

const Tag = () => {
  const [personName, setPersonName] = useState([]);
  const [typedName, setTypedName] = useState('');

  const handleAddName = () => {
    if (typedName.trim() !== '') {
      setPersonName((prevNames) => [...prevNames, typedName]);
      setTypedName('');
    }
  };

  const handleDelete = (deletedName) => {
    const updatedNames = personName.filter((name) => name !== deletedName);
    setPersonName(updatedNames);
  };

  return (
    <Box sx={{ display: 'flex', flexDirection: 'column', '& > *': { mt: 4, maxWidth: 500 } }}>
      <div>
        <Typography sx={{ mb: 2, fontWeight: 500 }}>TextField with Chip-Like Appearance</Typography>
        <Box
          sx={{
            display: 'flex',
            flexDirection: 'row',
            alignItems: 'flex-start',
            gap: '8px',
            width: '100%',
            justifyContent: 'flex-end', // Align items to the end (right to left)
            flexWrap: 'wrap-reverse', // Reverse the order of wrapping
          }}
        >
          {personName.map((name) => (
            <Chip
              key={name}
              label={name}
              onDelete={() => handleDelete(name)}
              sx={{ m: 0.75 }}
            />
          ))}
        </Box>
        <TextField
          label="Add a Name"
          value={typedName}
          onChange={(e) => setTypedName(e.target.value)}
          onKeyDown={(e) => {
            if (e.key === 'Enter') {
              e.preventDefault();
              handleAddName();
            }
          }}
          sx={{ '& input': { flex: '1' } }}
          fullWidth
        />
        <button onClick={handleAddName}>Add</button>
      </div>
    </Box>
  );
};

export default Tag;
